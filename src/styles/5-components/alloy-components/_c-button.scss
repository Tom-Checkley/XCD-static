/// <reference path="../main.scss" />

////
/// C_BUTTON
////

/// VARIABLES
/// ----------------------------------------------------

$C_BUTTON-transition:       0.1s ease-in-out;
$C_BUTTON-bg:               $COLOR-Secondary;
$C_BUTTON-color:            $COLOR-Black;
$C_BUTTON-bg-hover:         $COLOR-Secondary;
$C_BUTTON-color-hover:      $COLOR-White;
//
$C_BUTTON-shadow-color:     $COLOR-Primary;
$C_BUTTON-shadow-depth:     5;
$C_BUTTON-padding:          1rem 2.8rem;// 25 45
$C_BUTTON-iconspace:        2rem;
$C_BUTTON-fontsize:         1rem;
$C_BUTTON-iconsize:         28;
$C_BUTTON-radius:           5rem; // As long as its bigger than height
$C_BUTTON-minwidth:         null;
$C_BUTTON-visibletext:      true; // false for icon-only buttons

/// BASE
/// ----------------------------------------------------

@mixin c_button(
    $bg:                $C_BUTTON-bg,
    $text:              $C_BUTTON-color,
    $bg-hover:          $C_BUTTON-bg-hover,
    $text-hover:        $C_BUTTON-color-hover,
    $padding:           $C_BUTTON-padding,
    $iconspace:         $C_BUTTON-iconspace,
    $fontsize:          $C_BUTTON-fontsize,
    $iconsize:          $C_BUTTON-iconsize,
    $border-radius:     $C_BUTTON-radius,
    $minwidth:          $C_BUTTON-minwidth,
    $shadow-color:      $C_BUTTON-shadow-color,
    $shadow-depth:      $C_BUTTON-shadow-depth,
    $visibletext:       $C_BUTTON-visibletext) {

    min-width: $minwidth;
    @include link-custom($text, none, $text, none);

    border-radius: $border-radius;
    background-color: $bg;
    @include font-family($TYPE-FontFamily, $FONTLOADER-FontFamily, 700);
    text-transform: uppercase;
    // transition: box-shadow #{$C_BUTTON-transition};
    transition: all #{$C_BUTTON-transition};

    @if $shadow-depth > 0 {
        $border-shadow: 1px 1px $shadow-color;
        @for $i from 2 through $shadow-depth {
            $border-shadow: #{$border-shadow}, #{$i}px #{$i}px $shadow-color;
        }

        box-shadow: $border-shadow;
    }

    // Can't put display:flex on a button element, hence using a child element instead! #A11y
    .c-button__body {
        display: inline-flex;
        align-items: center;
        justify-content: space-between;
        height: 100%;
        padding: $padding;
    }

    .c-button__text {
        display: inline-block;
        @include font-size($fontsize);

        @if $visibletext {
            // Text and icon, add a space (else it's an icon by itself)
            + .c-icon {
                margin-left: $iconspace;
            }
        }
    }

    .c-icon {
        @include font-size($iconsize);

        & + .c-button__text {
            margin-left: $iconspace;
        }
    }

    &:hover,
    &:focus,
    &:focus-within,
    &:active {
        background-color: $bg-hover;
        color: $text-hover;
        box-shadow: none;

        .c-button__text {
        }
    }
}

// Strip browser button style to very basic. Any and all buttons must now have a variant - primary, secondary, alt, altprimary, altsecondary etc...
.c-button {
    appearance: none;
    border: none;
    background-color: transparent;
    display: inline-block;
    padding: 0;
}

// VARIANTS
// ----------------------------------------------------

.c-button--primary {
    @include c_button();
}

.c-button--secondary {
    @include c_button($bg: $COLOR-Primary, $text: $COLOR-White, $shadow-color: $COLOR-Secondary);
}

.c-button--tertiary {
    @include c_button($bg: $COLOR-BlueLightest);
}

.c-button--alt {
    @include c_button($bg: $COLOR-RustDarkest, $text: $COLOR-White, $shadow-color: $COLOR-Secondary);
}

.c-button--card {
    line-height: 1;
    @include font-size(16);
}

.c-button--circles {
    position: relative;
    border-radius: 50%;
    padding: 0;

    &::after {
        content: '';
        pointer-events: none;
        border-radius: 50%;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        box-shadow: 0px 0px 0px 1px $COLOR-White;
        transition: transform 0.2s, opacity 0.2s;
        transform: scale(0.8);
        opacity: 0;
    }

    &:hover,
    &:focus,
    &:active {
        &::after {
            transform: scale(1);
            opacity: 1;
        }
    }

    $C_BUTTON_ADMIN-size: 35;
    $C_BUTTON_ADMIN-padding: $C_BUTTON_ADMIN-size * 0.2;
    $C_BUTTON_ADMIN-computesize: ($C_BUTTON_ADMIN-padding * 2) + $C_BUTTON_ADMIN-size * 1px;

    .c-button__body {
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        line-height: 1;
        @include padding($C_BUTTON_ADMIN-padding);
        @include font-size($C_BUTTON_ADMIN-size);
        @include size($C_BUTTON_ADMIN-computesize);
        transition: background-color 0.25s ease-in-out, color 0.25s ease-in-out;
        @include link-custom($COLOR-White, none, $COLOR-White, none);
    }
}

// Shown next to inputs (eg, could be icon-only)
.c-button--inline {
    .c-button__body {
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 50%;
        line-height: 1;
        @include font-size(45);
    }
}

// RESPONSIVE
// ----------------------------------------------------

@include media(screen, "<=small") {
    //
}

@include media(screen, ">small", "<=medium") {
    //
}

@include media(screen, ">medium", "<=large") {
    //
}
